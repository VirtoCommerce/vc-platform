{
    "ConnectionStrings": {
        "VirtoCommerce": "Data Source=(local);Initial Catalog=VirtoCommerce3;Persist Security Info=True;User ID=virto;Password=virto;Connect Timeout=30",
        //"RedisConnectionString": "127.0.0.1:6379,ssl=False"
    },
    "Logging": {
        "IncludeScopes": true,
        "LogLevel": {
            "Default": "Information"
        }
    },
    "VirtoCommerce": {
        "LicenseActivationUrl": "https://virtocommerce.com/admin/api/licenses/activate/",
        "SampleDataUrl": "http://virtocommerce.azureedge.net/sample-data",
        //Relative or absolute file system path  where platform will discover installed modules
        "DiscoveryPath": "./modules",
        //This options controls how the OpenID Connect
        //server (ASOS) handles the incoming requests to arriving on non-HTTPS endpoints should be rejected or not. By default, this property is set to false to help
        //mitigate man-in-the-middle attacks.
        "AllowInsecureHttp": false,
        "Hangfire": {
            "JobStorageType": "SqlServer",
            //Set value to false to stop processing the background jobs.
            "UseHangfireServer": true,
            "AutomaticRetryCount": 2,
            "SqlServerStorageOptions": {
                "CommandBatchMaxTimeout": "00:05:00",
                "SlidingInvisibilityTimeout": "00:05:00",
                "QueuePollInterval": "00:00:00",
                "UseRecommendedIsolationLevel": true,
                "UsePageLocksOnDequeue": true,
                "DisableGlobalLocks": true,
                "EnableHeavyMigrations": true
            }
        },
        "ApplicationInsights": {
            "SamplingOptions": {
                "Processor": "Adaptive",
                "Adaptive": {
                    "MaxTelemetryItemsPerSecond": "5",
                    "InitialSamplingPercentage": "100",
                    "MinSamplingPercentage": "0.1",
                    "MaxSamplingPercentage": "100",
                    "EvaluationInterval": "00:00:15",
                    "SamplingPercentageDecreaseTimeout": "00:02:00",
                    "SamplingPercentageIncreaseTimeout": "00:15:00",
                    "MovingAverageRatio": "0.25"
                },
                "Fixed": {
                    "SamplingPercentage": 100
                },
                "IncludedTypes": "Dependency;Event;Exception;PageView;Request;Trace",
                "ExcludedTypes": ""
            },
            "EnableSqlCommandTextInstrumentation": true,
            "IgnoreSqlTelemetryOptions": {
                "QueryIgnoreSubstrings": [ "[HangFire].", "sp_getapplock", "sp_releaseapplock" ]
            }
        }
    },
    "Auth": {
        //auth server's url, e.g. http://localhost:5051/ or https://auth.example.com/ or leave empty for mode when authorization
        // and resource server is the same application
        "Authority": "",
        "Audience": "resource_server",
        "PublicCertPath": "./certificates/virtocommerce.crt",
        "PrivateKeyPath": "./certificates/virtocommerce.pfx",
        "PrivateKeyPassword": "virto"
    },
    "Assets": {
        "Provider": "FileSystem",
        "FileSystem": {
            "RootPath": "~/assets",
            "PublicUrl": "http://localhost:10645/assets/"
        },
        "AzureBlobStorage": {
            "ConnectionString": "",
            "CdnUrl": ""
        }
    },
    "Notifications": {
        "Gateway": "Smtp",
        "DefaultSender": "noreply@gmail.com",
        "Smtp": {
            "SmtpServer": "http://smtp.gmail.com",
            "Port": 587,
            "Login": "",
            "Password": ""
        },
        "SendGrid": {
            "ApiKey": ""
        }
    },
    "IdentityOptions": {
        "Password": {
            "RequiredLength": 8,
            "RequireDigit": false,
            "RequireNonAlphanumeric": false
        },
        "User": {
            "RequireUniqueEmail": true
        },
        "Lockout": {
            "DefaultLockoutTimeSpan": "0:15:0"
        }
    },
    "ExternalModules": {
        "IncludePrerelease": false,
        "ModulesManifestUrl": "https://raw.githubusercontent.com/VirtoCommerce/vc-modules/master/modules_v3.json",
        "AuthorizationToken": "",
        "AutoInstallModuleBundles": [
            "commerce"
        ]
    },
    "Search": {
        "Provider": "Lucene",
        "Scope": "default",
        "Lucene": {
            "Path": "app_data/lucene"
        },
        "AzureSearch": {
            "SearchServiceName": "ServiceName",
            "Key": "AccessKey"
        },
        "ElasticSearch": {
            "Server": "localhost:9200",
            "User": "elastic",
            "Key": "",
            "EnableHttpCompression": ""
        }
    },
    "Content": {
        "Provider": "FileSystem",
        "FileSystem": {
            "RootPath": "~/cms-content",
            "PublicUrl": "http://localhost:10645/cms-content/"
        },
        "AzureBlobStorage": {
            "ConnectionString": "",
            "CdnUrl": ""
        }
    },
    "Authorization": {
        "RefreshTokenLifeTime": "30.00:00:00",
        "AccessTokenLifeTime": "00:30:00",
        "LimitedCookiePermissions": "platform:asset:read;platform:export;content:read;platform:asset:create;licensing:issue;export:download"
    },
    "AzureAd": {
        "Enabled": false,
        "AuthenticationType": "AzureAD",
        "AuthenticationCaption": "Azure Active Directory",
        "ApplicationId": "(Replace this with Application (client) ID, e.g. 01234567-89ab-cdef-0123-456789abcdef)",
        "TenantId": "(Replace this with Directory (tenant) ID, e.g. abcdef01-2345-6789-abcd-ef0123456789)",
        "AzureAdInstance": "https://login.microsoftonline.com/",
        //If your app has custom signing keys as a result of using the claims-mapping feature, you must append an appid query parameter containing the app ID in order to get a
        //jwks_uri pointing to your app's signing key information.
        //For example: https://login.microsoftonline.com/{tenant}/v2.0/.well-known/openid-configuration?appid=6731de76-14a6-49ae-97bc-6eba6914391e contains a jwks_uri
        //of https://login.microsoftonline.com/{tenant}/discovery/v2.0/keys?appid=6731de76-14a6-49ae-97bc-6eba6914391e.
        //Please uncomment the flowing property if our app has custom signing keys.
        //"MetadataAddress": "https://login.microsoftonline.com/{{TenantId}}/v2.0/.well-known/openid-configuration?appid={{ApplicationId}}",
        "DefaultUserType": "Manager"
    },
    "Caching": {
        "CacheEnabled": true,
        "CacheSlidingExpiration": "0:15:00",
        "Redis": {
            "ChannelName": "VirtoCommerceChannel",
            "BusRetryCount": 3
        }
    },
    "PushNotifications": {
        //Possible values: RedisBackplane | AzureSignalRService | None
        //Read more about scaling configuration https://virtocommerce.com/docs/latest/techniques/how-scale-out-platform-on-azure/
        "ScalabilityMode": "None",
        //The URL is used to connect the platform SignalR /pushNotificationHub hub as client to be able sync the local notifications storage with notifications that are produced by other platform instances
        //Need to specify a full URL to  /pushNotificationHub e.g https://your-app-name.azurewebsites.net/pushNotificationHub
        "HubUrl": "http://localhost:10645/pushNotificationHub",
        //Force use WebSockets for notification exchange. Host environment should allow to use WebSockets.
        //For Azure AppService configuration: switch 'Web sockets' to 'On'. 'ARR affinity': 'Off'
        "ForceWebSockets": false,
        "AzureSignalRService": {
            "ConnectionString": "Endpoint=https://{app name}.service.signalr.net;AccessKey={access key};Version=1.0;"
        },
        "RedisBackplane": {
            "ChannelName": "VirtoCommerceChannel"
        }
    }
}
