name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev, dev-3.0.0, release/3.0.0 ]
  pull_request:
    branches: [ master, dev, dev-3.0.0, release/3.0.0 ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool --version 3.0.0-beta0010

    - name: Build
      run: vc-build Compile

    - name: Unit Tests
      run: vc-build Test -skip Restore+Compile

    - name: Build Package
      run: vc-build Compress -skip Clean+Restore+Compile+Test

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2
      with:
        # Artifact name
        name: Platform # optional
        # A file, directory or wildcard pattern that describes what to upload
        path: artifacts/publish/

  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Download a Build Artifact
      uses: actions/download-artifact@v2
      with:
        # Artifact name
        name: Platform # optional
        # Destination path
        path: artifacts/publish/ # optional

    - name: Checkout Dockerfiles
      uses: actions/checkout@v2.1.1
      with:
        # Repository name with owner. For example, actions/checkout
        repository: VirtoCommerce/jenkins-pipeline-scripts
        # The branch, tag or SHA to checkout. When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event.  Otherwise, defaults to `master`.
        ref: master
        path: jenkins-pipeline-scripts

    - name: Copy docker files
      run: cp -r jenkins-pipeline-scripts/resources/docker.core/linux/platform/ artifacts/publish/

    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: $DOCKER_REGISTRY_USERNAME # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_REGISTRY_TOKEN }}
        # Server address of Docker registry. If not set then will default to Docker Hub
        registry: # optional
        # Docker repository to tag the image with
        repository: $DOCKER_IMAGE_NAME
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: 3.0-preview
        # Path to the build context
        path: # optional, default is .
        # Path to the Dockerfile (Default is '{path}/Dockerfile')
        dockerfile: /artifacts/publish/Dockerfile # optional
      env:
        DOCKER_REGISTRY_USERNAME: leonidn
        DOCKER_IMAGE_NAME: leonidn/platform