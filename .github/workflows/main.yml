# v1.1
name: Platform CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches: [ master, dev ]
  pull_request:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches: [ master, dev ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool

    - name: Install dotnet-sonarscanner
      run: dotnet tool install --global dotnet-sonarscanner

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Get changelog
      id: changelog
      uses: VirtoCommerce/vc-github-actions/changelog-generator@master

    - name: Add version suffix
      if: ${{ github.ref != 'refs/heads/master' }}
      uses: VirtoCommerce/vc-github-actions/add-version-suffix@master
      with:
        versionSuffix: ${{ steps.image.outputs.suffix }}

    - name: SonarCloud Begin
      uses: VirtoCommerce/vc-github-actions/sonar-scanner-begin@master

    - name: Build
      run: vc-build Compile

    - name: Unit Tests
      run: vc-build Test -skip

    - name: SonarCloud End
      uses: VirtoCommerce/vc-github-actions/sonar-scanner-end@master

    - name: Quality Gate
      uses: VirtoCommerce/vc-github-actions/sonar-quality-gate@master
      with:
        login: ${{secrets.SONAR_TOKEN}}

    - name: Packaging
      run: vc-build Compress -skip Clean+Restore+Compile+Test

    - name: Build Docker Image
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
      id: dockerBuild
      uses: VirtoCommerce/vc-github-actions/build-docker-image@master
      with:
        tag: ${{ steps.image.outputs.taggedVersion }}
        imageName: "platform"
        dockerFiles: "https://raw.githubusercontent.com/VirtoCommerce/vc-docker/master/linux/platform/Dockerfile;https://raw.githubusercontent.com/VirtoCommerce/vc-docker/master/linux/platform/wait-for-it.sh"
          
    - name: Publish Nuget
      if: ${{ github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/master'}}
      uses: VirtoCommerce/vc-github-actions/publish-nuget@master

    - name: Publish to Blob
      if: ${{ github.ref == 'refs/heads/dev' }}
      id: blobRelease
      uses: VirtoCommerce/vc-github-actions/publish-blob-release@master
      with:
        blobSAS: ${{ secrets.BLOB_TOKEN }}
      
    - name: Publish Github Release
      if: ${{ github.ref == 'refs/heads/master' }}
      with:
        changelog: ${{ steps.changelog.outputs.changelog }}
      uses: VirtoCommerce/vc-github-actions/publish-github-release@master

    - name: Docker Login
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
      uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: $GITHUB_ACTOR
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Docker Image
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/dev' }}
      uses: VirtoCommerce/vc-github-actions/publish-docker-image@master
      with:
          image: ${{ steps.dockerBuild.outputs.imageName }}
          tag: ${{ steps.image.outputs.taggedVersion }}
          docker_user: ${{ secrets.DOCKER_USERNAME }}
          docker_token: ${{ secrets.DOCKER_TOKEN }}