name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master, dev, dev-3.0.0, release/3.0.0 ]
  pull_request:
    branches: [ master, dev, dev-3.0.0, release/3.0.0 ]

# Enables BuildKit
env:
  DOCKER_BUILDKIT: 0

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  verify:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool --version 3.0.0-beta0010

    - name: Build
      run: vc-build Compile

    - name: Unit Tests
      run: vc-build Test -skip Restore+Compile


  publish:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool --version 3.0.0-beta0010

    - name: Build Package
      run: vc-build Compress -skip Test

    - name: Copy Dockerfile
      run: |
        cd artifacts/publish/
        pwsh -command "Invoke-WebRequest -Uri https://raw.githubusercontent.com/VirtoCommerce/jenkins-pipeline-scripts/master/resources/docker.core/linux/platform/Dockerfile -OutFile Dockerfile"

    - name: Build and push Docker images
      uses: docker/build-push-action@v1.1.0
      with:
        # Username used to log in to a Docker registry. If not set then no login will occur
        username: ${{ secrets.DOCKER_USERNAME }} # optional
        # Password or personal access token used to log in to a Docker registry. If not set then no login will occur
        password: ${{ secrets.DOCKER_TOKEN }}
        # Docker repository to tag the image with
        repository: leonidn/platform
        # Comma-delimited list of tags. These will be added to the registry/repository to form the image's tags
        tags: 3.0-preview
        path: artifacts/publish/
        build_args: SOURCE=.

  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Run container
      run: |
        cd docker
        docker-compose up -d

    - name: Setup modules
      run: |
        cd ${{ env.GITHUB_WORKSPACE }}
        pwsh -command "Invoke-WebRequest -Uri https://raw.githubusercontent.com/VirtoCommerce/jenkins-pipeline-scripts/master/resources/docker_v3/vc-setup-modules.ps1 -OutFile vc-setup-modules.ps1"
        pwsh -command "./vc-setup-modules.ps1 -ApiUrl localhost:8081 -NeedRestart -ContainerId leonidn_vc-platform-web_1 -Verbose -Debug"