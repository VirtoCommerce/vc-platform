name: Platform E2E

on:
  workflow_dispatch:
    inputs:
      testSuite:
        description: "Test Suite"
        required: false
        default: "Test Suites/Platform_start"

  pull_request:
    paths-ignore:
      - '.github/**'
      - 'docs/**'
      - 'build/**'
      - 'README.md'
      - 'LICENSE'
    branches: [ master, dev ]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    env:
      SONAR_TOKEN: ${{secrets.SONAR_TOKEN}}
      GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}
      NUGET_KEY: ${{ secrets.NUGET_KEY }}
      BLOB_SAS: ${{ secrets.BLOB_TOKEN }}

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up .net Core 3.1.x for vc-build #GitHib Actions migrates to .net Core 5.x. To vc-build work properly need to manually install .net Core 3.1.x
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - name: Install VirtoCommerce.GlobalTool
      run: dotnet tool install --global VirtoCommerce.GlobalTool

    - name: Get Image Version
      uses: VirtoCommerce/vc-github-actions/get-image-version@master
      id: image

    - name: Build
      run: vc-build Compile

    - name: Packaging
      run: vc-build Compress -skip Clean+Restore+Compile+Test

    - name: Build Docker Image
      id: dockerBuild
      uses: VirtoCommerce/vc-github-actions/build-docker-image@master
      with:
        tag: ${{ steps.image.outputs.taggedVersion }}
        imageName: "platform"
        dockerFiles: "https://raw.githubusercontent.com/VirtoCommerce/vc-docker/master/linux/platform/Dockerfile;https://raw.githubusercontent.com/VirtoCommerce/vc-docker/master/linux/platform/wait-for-it.sh"

    - name: Docker Login
      uses: azure/docker-login@v1
      with:
        login-server: docker.pkg.github.com
        username: $GITHUB_ACTOR
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Docker Env
      uses: VirtoCommerce/vc-github-actions/docker-env@master
      with:
        githubUser: ${{ env.GITHUB_ACTOR }}
        githubToken: ${{ env.GITHUB_TOKEN }}
        platformDockerTag: ${{ steps.image.outputs.taggedVersion }}
        storefrontDockerTag: 'dev-linux-latest'
        platformImage: docker.pkg.github.com/virtocommerce/vc-platform/platform
        storefrontImage: docker.pkg.github.com/virtocommerce/vc-storefront/storefront
        validateSwagger: 'false'

    - name: Getting tests
      shell: sh
      run: git clone https://github.com/VirtoCommerce/vc-quality-gate-katalon.git

    - name: Katalon Studio Github Action
      uses: katalon-studio/katalon-studio-github-action@v2.2
      with:
        version: '7.5.5'
        projectPath: '${{ github.workspace }}/vc-quality-gate-katalon/platform_storefront.prj'
        args: '-noSplash -retry=0 -testSuitePath="Test Suites/Platform_start" -browserType="Chrome" -apiKey= ${{ secrets.KATALON_API_KEY }} -g_urlBack="http://localhost:8090" -g_urlFront="http://localhost:8080" -executionProfile="default"'

    - name: Katalon Report to PR
      if: ${{ ( success() || failure() ) && github.event_name == 'pull_request' }}
      uses: VirtoCommerce/vc-github-actions/publish-katalon-report@master
      with: 
        testProjectPath: ${{ github.workspace }}